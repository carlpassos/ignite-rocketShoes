{"ast":null,"code":"var _jsxFileName = \"/Users/carlospassos/Documents/Dev/estudo/ignite/Desafio01_ignite/src/pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { ProductList } from './styles';\nimport { api } from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { useCart } from '../../hooks/useCart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const {\n    addProduct,\n    updateProductAmount,\n    cart\n  } = useCart(); // const cartItemsAmount = cart.reduce((sumAmount, product) => {\n  //   // TODO\n  // }, {} as CartItemsAmount)\n\n  useEffect(() => {\n    async function loadProducts() {\n      await api.get('http://localhost:3333/products').then(async response => {\n        const productsArray = await response.data;\n\n        if (productsArray) {\n          const finalProducts = productsArray.map(product => !product.priceFormatted ? { ...product,\n            formatedPrice: formatPrice(product.price)\n          } : product);\n          setProducts(finalProducts);\n        }\n      });\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id) {\n    if (cart) {\n      const filteredCart = cart.filter(product => product.id === id);\n      console.log(cart);\n\n      if (filteredCart.length > 0) {\n        const amount = filteredCart[0].amount + 1;\n        updateProductAmount({\n          productId: id,\n          amount\n        });\n        return;\n      }\n\n      addProduct(id);\n      return;\n    } // api.get(`/stock/?id=${id}`).then(response => {\n    //   api.get(`/products/?id=${response.data.id}`).then(response => {\n    //     if (cart) {\n    //       const filteredCart = cart.filter(product => product.id === productId);\n    //       console.log(filteredCart);\n    //     if (filteredCart === []) {\n    //       const amount = filteredCart[0] ? filteredCart[0].amount + 1 : 1;\n    //       updateProductAmount({ productId, amount });\n    //       return\n    //     }\n    //   }\n    //   console.log(cart);\n    //     const newCart = cart;\n    //     newCart.push(response.data);\n    //     console.log(newCart);\n    // localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart))\n    //   })\n    // }) \n    // addProduct(id);\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    children: products.map(product => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: \"T\\xEAnis de Caminhada Leve Confort\\xE1vel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: product.priceFormatted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"add-product-button\",\n          onClick: () => handleAddProduct(product.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-testid\": \"cart-product-quantity\",\n            children: [/*#__PURE__*/_jsxDEV(MdAddShoppingCart, {\n              size: 16,\n              color: \"#FFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), \" 2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ADICIONAR AO CARRINHO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"6ssqnwT74cbnNgEmXCRQveRmni8=\", false, function () {\n  return [useCart];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/carlospassos/Documents/Dev/estudo/ignite/Desafio01_ignite/src/pages/Home/index.tsx"],"names":["React","useState","useEffect","MdAddShoppingCart","ProductList","api","formatPrice","useCart","Home","products","setProducts","addProduct","updateProductAmount","cart","loadProducts","get","then","response","productsArray","data","finalProducts","map","product","priceFormatted","formatedPrice","price","handleAddProduct","id","filteredCart","filter","console","log","length","amount","productId","image","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\n\nimport { ProductList } from './styles';\nimport { api } from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { useCart } from '../../hooks/useCart';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n}\n\ninterface ProductFormatted extends Product {\n  priceFormatted: string;\n}\n\ninterface CartItemsAmount {\n  [key: number]: number;\n}\n\nconst Home = (): JSX.Element => {\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\n  const { addProduct, updateProductAmount, cart } = useCart();\n\n  // const cartItemsAmount = cart.reduce((sumAmount, product) => {\n  //   // TODO\n  // }, {} as CartItemsAmount)\n\n  useEffect(() => {\n    async function loadProducts() {\n      await api.get('http://localhost:3333/products')\n      .then(async (response) => {\n        const productsArray: ProductFormatted[] = await response.data\n        \n        if (productsArray) {\n         \n          const finalProducts = productsArray.map(product => !product.priceFormatted ? {\n              ...product,\n              formatedPrice: formatPrice(product.price)\n            } : product\n          )\n          setProducts(finalProducts)\n        }\n        \n      })\n    }\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id: number) {\n\n    if (cart) {\n      const filteredCart = cart.filter(product => product.id === id);\n\n      console.log(cart)\n      if (filteredCart.length > 0) {\n        const amount = filteredCart[0].amount +1;\n\n        updateProductAmount({productId: id, amount })\n        return\n      }\n\n        addProduct(id);\n        return\n\n      \n    }\n\n    // api.get(`/stock/?id=${id}`).then(response => {\n    //   api.get(`/products/?id=${response.data.id}`).then(response => {\n    //     if (cart) {\n    //       const filteredCart = cart.filter(product => product.id === productId);\n    //       console.log(filteredCart);\n        \n    //     if (filteredCart === []) {\n    //       const amount = filteredCart[0] ? filteredCart[0].amount + 1 : 1;\n    //       updateProductAmount({ productId, amount });\n    //       return\n    //     }\n    //   }\n    //   console.log(cart);\n\n    //     const newCart = cart;\n\n    //     newCart.push(response.data);\n    //     console.log(newCart);\n        // localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart))\n    //   })\n    // }) \n    \n    \n    // addProduct(id);\n  }\n\n  return (\n    <ProductList>\n      {products.map(\n        product => {\n          return(\n            <li>\n              <img src={product.image} alt=\"Tênis de Caminhada Leve Confortável\" />\n              <strong>{product.title}</strong>\n              <span>{product.priceFormatted}</span>\n              <button\n                type=\"button\"\n                data-testid=\"add-product-button\"\n              onClick={() => handleAddProduct(product.id)}\n              >\n                <div data-testid=\"cart-product-quantity\">\n                  <MdAddShoppingCart size={16} color=\"#FFF\" />\n                  {/* {cartItemsAmount[product.id] || 0} */} 2\n                </div>\n\n                <span>ADICIONAR AO CARRINHO</span>\n              </button>\n            </li>\n          )\n        }\n      )}\n    </ProductList>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}